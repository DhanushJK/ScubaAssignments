<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="36" passed="36">
  <reporter-output>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 9 Expected - 9]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 9 Expected - 9]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 14 Expected - 14]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 14 Expected - 14]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 82 Expected - 82]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 82 Expected - 82]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 15 Expected - 15]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 3 Expected - 3]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 15 Expected - 15]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 3 Expected - 3]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 24 Expected - 24]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 54 Expected - 54]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2.0 Expected - 22.0]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -1 Expected - -1]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 1.0 Expected - 221.0]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -28 Expected - -28]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 3.0 Expected - 23.0]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0.25 Expected - 32.0]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0.3333333333333333 Expected - 33.0]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0.2 Expected - 32.0]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0 Expected - 0]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0 Expected - 0]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0 Expected - 0]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 24 Expected - 24]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 54 Expected - 54]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -1 Expected - -1]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -7 Expected - -7]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -15 Expected - -15]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -1 Expected - -1]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -28 Expected - -28]]>
    </line>
    <line>
      <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
    </line>
  </reporter-output>
  <suite name="Calculator Paralle Classes Test Suite" duration-ms="857" started-at="2020-07-06T12:52:06 IST" finished-at="2020-07-06T12:52:07 IST">
    <groups>
      <group name="intermittent_calculation">
        <method signature="calculatorAssertion.calcDivReal(int, int, double)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcDivReal" class="com.calculator.assertfunction.calculatorAssertion"/>
        <method signature="calculatorAssertion.calcInverse(int, double)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcInverse" class="com.calculator.assertfunction.calculatorAssertion"/>
        <method signature="calculatorAssertion.calcModulus(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcModulus" class="com.calculator.assertfunction.calculatorAssertion"/>
        <method signature="calculatorAssertion.calcNegate(int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcNegate" class="com.calculator.assertfunction.calculatorAssertion"/>
      </group> <!-- intermittent_calculation -->
      <group name="basic_calculation">
        <method signature="calculatorAssertion.calcAddition(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcAddition" class="com.calculator.assertfunction.calculatorAssertion"/>
        <method signature="calculatorAssertion.calcDivInt(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcDivInt" class="com.calculator.assertfunction.calculatorAssertion"/>
        <method signature="calculatorAssertion.calcMultiplication(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcMultiplication" class="com.calculator.assertfunction.calculatorAssertion"/>
        <method signature="calculatorAssertion.calcSubraction(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcSubraction" class="com.calculator.assertfunction.calculatorAssertion"/>
        <method signature="calculatorParallel.calcAddition(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcAddition" class="com.calculator.parallelExecution.calculatorParallel"/>
        <method signature="calculatorParallel.calcDivInt(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcDivInt" class="com.calculator.parallelExecution.calculatorParallel"/>
        <method signature="calculatorParallel.calcMultiplication(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcMultiplication" class="com.calculator.parallelExecution.calculatorParallel"/>
        <method signature="calculatorParallel.calcSubraction(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcSubraction" class="com.calculator.parallelExecution.calculatorParallel"/>
      </group> <!-- basic_calculation -->
    </groups>
    <test name="Calculator Parallel Classes Scenarios" duration-ms="857" started-at="2020-07-06T12:52:06 IST" finished-at="2020-07-06T12:52:07 IST">
      <class name="com.calculator.assertfunction.calculatorAssertion">
        <test-method status="PASS" signature="classSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="classSetUp" is-config="true" duration-ms="12" started-at="2020-07-06T12:52:06 IST" finished-at="2020-07-06T12:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:06 IST" finished-at="2020-07-06T12:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcAddition(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcAddition" duration-ms="706" started-at="2020-07-06T12:52:06 IST" data-provider="additionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 9 Expected - 9]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcAddition -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcAddition(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcAddition" duration-ms="2" started-at="2020-07-06T12:52:07 IST" data-provider="additionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 14 Expected - 14]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcAddition -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcAddition(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcAddition" duration-ms="2" started-at="2020-07-06T12:52:07 IST" data-provider="additionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[77]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[82]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 82 Expected - 82]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcAddition -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcDivInt(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcDivInt" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="divIntData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcDivInt -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcDivInt(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcDivInt" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="divIntData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 15 Expected - 15]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcDivInt -->
        <test-method status="PASS" signature="calcDivInt(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcDivInt" duration-ms="2" started-at="2020-07-06T12:52:07 IST" data-provider="divIntData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 3 Expected - 3]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcDivInt -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcDivReal(int, int, double)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcDivReal" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="divRealData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[22.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2.0 Expected - 22.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcDivReal -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcDivReal(int, int, double)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcDivReal" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="divRealData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[221.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 1.0 Expected - 221.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcDivReal -->
        <test-method status="PASS" signature="calcDivReal(int, int, double)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcDivReal" duration-ms="2" started-at="2020-07-06T12:52:07 IST" data-provider="divRealData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[23.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 3.0 Expected - 23.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcDivReal -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcInverse(int, double)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcInverse" duration-ms="2" started-at="2020-07-06T12:52:07 IST" data-provider="inverseData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0.25 Expected - 32.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcInverse -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcInverse(int, double)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcInverse" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="inverseData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0.3333333333333333 Expected - 33.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcInverse -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcInverse(int, double)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcInverse" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="inverseData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0.2 Expected - 32.0]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcInverse -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcModulus(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcModulus" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="modulusData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0 Expected - 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcModulus -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcModulus(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcModulus" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="modulusData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0 Expected - 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcModulus -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcModulus(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcModulus" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="modulusData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 0 Expected - 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcModulus -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcMultiplication(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcMultiplication" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="multiplyData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcMultiplication -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcMultiplication(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcMultiplication" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="multiplyData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 24 Expected - 24]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcMultiplication -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcMultiplication(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcMultiplication" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="multiplyData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[54]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 54 Expected - 54]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcMultiplication -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="2" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcNegate(int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcNegate" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="negateData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -1 Expected - -1]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcNegate -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcNegate(int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcNegate" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="negateData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-7]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -7 Expected - -7]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcNegate -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcNegate(int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcNegate" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="negateData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -15 Expected - -15]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcNegate -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="calcSubraction(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcSubraction" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="subractionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -1 Expected - -1]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcSubraction -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="1" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcSubraction(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcSubraction" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="subractionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -28 Expected - -28]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcSubraction -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
        <test-method status="PASS" signature="calcSubraction(int, int, int)[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="calcSubraction" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="subractionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcSubraction -->
        <test-method status="PASS" signature="methodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="methodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetUp -->
        <test-method status="PASS" signature="afterClassSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterClassSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassSetUp -->
        <test-method status="PASS" signature="afterMethodSetUp()[pri:0, instance:com.calculator.assertfunction.calculatorAssertion@69b0fd6f]" name="afterMethodSetUp" is-config="true" duration-ms="0" started-at="2020-07-06T12:52:07 IST" finished-at="2020-07-06T12:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodSetUp -->
      </class> <!-- com.calculator.assertfunction.calculatorAssertion -->
      <class name="com.calculator.parallelExecution.calculatorParallel">
        <test-method status="PASS" signature="calcAddition(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcAddition" duration-ms="708" started-at="2020-07-06T12:52:06 IST" data-provider="additionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 9 Expected - 9]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcAddition -->
        <test-method status="PASS" signature="calcAddition(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcAddition" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="additionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 14 Expected - 14]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcAddition -->
        <test-method status="PASS" signature="calcAddition(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcAddition" duration-ms="2" started-at="2020-07-06T12:52:07 IST" data-provider="additionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[77]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[82]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 82 Expected - 82]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcAddition -->
        <test-method status="PASS" signature="calcDivInt(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcDivInt" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="divIntData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcDivInt -->
        <test-method status="PASS" signature="calcDivInt(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcDivInt" duration-ms="2" started-at="2020-07-06T12:52:07 IST" data-provider="divIntData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 15 Expected - 15]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcDivInt -->
        <test-method status="PASS" signature="calcDivInt(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcDivInt" duration-ms="2" started-at="2020-07-06T12:52:07 IST" data-provider="divIntData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 3 Expected - 3]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcDivInt -->
        <test-method status="PASS" signature="calcMultiplication(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcMultiplication" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="multiplyData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcMultiplication -->
        <test-method status="PASS" signature="calcMultiplication(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcMultiplication" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="multiplyData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 24 Expected - 24]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcMultiplication -->
        <test-method status="PASS" signature="calcMultiplication(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcMultiplication" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="multiplyData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[54]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 54 Expected - 54]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcMultiplication -->
        <test-method status="PASS" signature="calcSubraction(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcSubraction" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="subractionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -1 Expected - -1]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcSubraction -->
        <test-method status="PASS" signature="calcSubraction(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcSubraction" duration-ms="1" started-at="2020-07-06T12:52:07 IST" data-provider="subractionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - -28 Expected - -28]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcSubraction -->
        <test-method status="PASS" signature="calcSubraction(int, int, int)[pri:0, instance:com.calculator.parallelExecution.calculatorParallel@757942a1]" name="calcSubraction" duration-ms="2" started-at="2020-07-06T12:52:07 IST" data-provider="subractionData" finished-at="2020-07-06T12:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[06-Jul-2020 12:52:07 PM : Actual - 2 Expected - 2]]>
            </line>
          </reporter-output>
        </test-method> <!-- calcSubraction -->
      </class> <!-- com.calculator.parallelExecution.calculatorParallel -->
    </test> <!-- Calculator Parallel Classes Scenarios -->
  </suite> <!-- Calculator Paralle Classes Test Suite -->
</testng-results>
